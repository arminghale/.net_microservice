services:
  # kafka:
  #   image: apache/kafka:latest
  #   container_name: kafka
  #   ports:
  #     - "9092:9092"
  #   healthcheck:
  #     test: ["CMD-SHELL", "echo 'test-message' | kafka-console-producer.sh --broker-list localhost:9092 --topic health-check-topic && kafka-console-consumer.sh --bootstrap-server localhost:9092 --topic health-check-topic --from-beginning --max-messages 1 | grep 'test-message'"]
  #     interval: 15s
  #     timeout: 10s
  #     retries: 3

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 30s
      retries: 50
      start_period: 30s
    restart: always

  postgres:
    image: postgres:latest
    container_name: postgres
    volumes:
      -  db-data:/var/lib/postgresql/data
      - ./DB/Management.sql:/docker-entrypoint-initdb.d/init.sql:ro
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DATABASE}
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DATABASE}"]
      interval: 10s
      retries: 5
      start_period: 30s
    restart: always

  # minio:
  #   image: quay.io/minio/minio
  #   container_name: minio
  #   environment:
  #     MINIO_ROOT_USER: ${MINIO_USER}
  #     MINIO_ROOT_PASSWORD: ${MINIO_PASSWORD}
  #   volumes:
  #     - ./data/minio:/data
  #   ports:
  #     - "9000:9000"
  #     - "9001:9001"
  #   healthcheck:
  #     test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
  #     interval: 30s
  #     timeout: 20s
  #     retries: 3
  #   command: server /data --console-address ":9001"

#  manage_identity:
#    build:
#      context: .
#      dockerfile: Manage/Manage.Identity/Dockerfile
#    environment:
#      POSTGRES_CONNECTION: "Host=postgres;Port=5432;User ID=${POSTGRES_USER};Password=${POSTGRES_PASSWORD};Database=${POSTGRES_DATABASE}"
#      REDIS_CONNECTION: "redis:6379"
#      MINIO_CONNECTION: "minio:9000"
#      MINIO_ACCESSKEY: ${MINIO_USER}
#      MINIO_SECRETKEY: ${MINIO_PASSWORD}
#      KAFKA_CONNECTION: "kafka:9092"
#      JWT_AUDIENCE: ${JWT_AUDIENCE}
#      JWT_ISSUER: ${JWT_ISSUER}
#      JWT_KEY: ${JWT_KEY}
#      EMAIL_CREDENTIALS: ${EMAIL_CREDENTIALS}
#      EMAIL_ADDRESS: ${EMAIL_ADDRESS}
#      EMAIL_HOST: ${EMAIL_HOST}
#      EMAIL_NAME: ${EMAIL_NAME}
#      SMS_USERNAME: ${SMS_USERNAME}
#      SMS_PASSWORD: ${SMS_PASSWORD}
#      SMS_PHONENUMBER: ${SMS_PHONENUMBER}
#    depends_on:
#      # kafka:
#      #   condition: service_healthy
#      # redis:
#      #   condition: service_healthy
#      postgres:
#        condition: service_healthy
#      # minio:
#      #   condition: service_healthy
#    ports:
#      - "5000:8080"
#      - "5001:8081"

volumes:
  db-data:
    name: postgresData
